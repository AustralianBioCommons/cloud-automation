# used ssjdispatcher deployment spec as a base
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariner-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: mariner
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: mariner
        release: test
        netnolimit: "yes" # check
        public: "yes"
        GEN3_DATE_LABEL
    spec:
      serviceAccountName: mariner-service-account
      volumes:
        - name: mariner-config
          configMap:
            name: manifest-mariner
            items:
              - key: json
                path: mariner-config.json
        - name: mariner-secret
          secret:
            secretName: "mariner-g3auto"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mariner
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: true
      containers:
      - name: mariner
        GEN3_MARINER_IMAGE
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 0.4
            memory: 1200Mi
          limits:
            memory: 2400Mi
            cpu: 0.8
        env:
          - name: AWSCREDS
            valueFrom:
              secretKeyRef:
                name: "workflow-bot-g3auto"
                key: "awsusercreds.json"
          - name: GEN3_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JWKS_ENDPOINT
            value: "http://fence-service/.well-known/jwks"
        volumeMounts:
          - name: mariner-config
            readOnly: true
            mountPath: /mariner-config
          - name: "mariner-secret"
            readOnly: true
            mountPath: "/var/www/mariner/dbcreds.json"
            subPath: dbcreds.json
        command: ["/bin/bash"]
        args:
          - "-c"
          - |
            # set env vars
            export PGDATABASE=$(cat /var/www/mariner/dbcreds.json | jq -r '.db_database')
            export PGUSER=$(cat /var/www/mariner/dbcreds.json | jq -r '.db_username')
            export PGPASSWORD=$(cat /var/www/mariner/dbcreds.json | jq -r '.db_password')
            export PGHOST=$(cat /var/www/mariner/dbcreds.json | jq -r '.db_host')
            export PGPORT="5432"
            export PGSSLMODE="disable"

              # TODO: bring db schema up to latest version
              #/go/src/github.com/uc-cdis/mariner/migrations/latest
              
              # Run Mariner
              /go/src/github.com/uc-cdis/mariner/bin/mariner listen
              echo "Exit code: $?"
        ports:
        - containerPort: 80
